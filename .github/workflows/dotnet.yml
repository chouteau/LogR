name: .NET

on:
  pull_request:
    branches: [ prod ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
      env:
        NUGET_AUTH_TOKEN: '%NUGET_AUTH_TOKEN%'

    - name: Restore dependencies
      run: dotnet restore LogRPush.sln

    - name: Build
      run: dotnet build LogRPush.sln --no-restore --configuration Release

    - name: Pack LogRPush
      run: dotnet pack --no-build --configuration Release ${{github.workspace}}/src/LogRPush/LogRPush.csproj --output .

    - name: Pack LogRWebMonitor
      run: dotnet pack --no-build --configuration Release ${{github.workspace}}/src/LogRWebMonitor/LogRWebMonitor.csproj --output .

    - name: Push Nuget
      run: dotnet nuget push *.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{secrets.nuget}} --skip-duplicate

    - name: Publish LogRWebApp
      run: |
        cd ${{github.workspace}}\src\LogRWebApp
        dotnet publish -c Release LogRWebApp.csproj

    - name: Zip LogRWebApp
      run: |
        cd ${{github.workspace}}\src\LogRWebApp\bin\Release\net6.0\publish
        del appsettings.*.json
        del web.config
        7z.exe a -r -tzip ${{github.workspace}}\logrwebapp.zip * 

    - uses: dev-drprasad/delete-tag-and-release@v0.2.0
      with:
        delete_release: true # default: false
        tag_name: Latest # tag name to delete
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with: 
        tag_name: Latest
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{github.workspace}}\logrwebapp.zip
        asset_name: logrwebapp.zip
        asset_content_type: application/zip

  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}