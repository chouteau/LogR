@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components.Forms

<EditForm Model="@filter" OnSubmit="ApplyFilter" class="row gy-2 gx-3 align-items-center filter">
    <div class="col-auto">
        @foreach(var level in filter.LevelList)
        {
           <InputCheckbox class="form-check-input" @bind-Value="level.Checked" @onclick="(evt) => LevelChanged(level, evt)" />@level.Name
        }
    </div>
    <div class="col-auto">
        <label class="visually-hidden" for="Search">Search :</label>
        <InputText @bind-Value="filter.Search" class="form-control" placeholder="Search" />
    </div>
    <div class="col-auto">
        <button type="submit" class="btn btn-primary">Apply</button>
    </div>
</EditForm>

<div class="table-responsive">
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>CreationDate</th>
                <th>MachineName</th>
                <th>HostName</th>
                <th>ApplicationName</th>
                <th>Level</th>
                <th>Context</th>
                <th>Message</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in logInfoList)
           {
                var css = string.Empty;
                switch (item.Category)
                {
                    case LogRPush.Category.Trace :
                        css = "table-secondary";
                        break;
                    case LogRPush.Category.Debug :
                        css = "table-default";
                        break;
                    case LogRPush.Category.Error :
                        css = "table-danger";
                        break;
                    case LogRPush.Category.Fatal :
                        css = "table-dark";
                        break;
                    case LogRPush.Category.Info :
                        css = "table-info";
                        break;
                    case LogRPush.Category.Notification :
                        css = "table-success";
                        break;
                    case LogRPush.Category.Sql :
                        css = "table-primary";
                        break;
                    case LogRPush.Category.Warn :
                        css = "table-warning";
                        break;
                }
            <tr @key=item class="@css">
                <td>@item.CreationDate</td>
                <td>@item.MachineName</td>
                <td>@item.HostName</td>
                <td>@item.ApplicationName</td>
                <td>@item.Category</td>
                <td>@item.Context</td>
                <td>
                    @item.Message
                 </td>
            </tr>
            @if (!string.IsNullOrWhiteSpace(item.ExceptionStack))
            {
                var exceptoinStack = new MarkupString(item.ExceptionStack.Replace("\n", "<br/>"));
                <tr class="@css">
                    <td colspan="7">
                       @exceptoinStack
                    </td>
                </tr>
            }

           }
        </tbody>
    </table>
</div>
