@using Microsoft.AspNetCore.Components.Web

<tr @key="Log" class="@css">
    <td>
        <button class="btn btn-link @Log.LogId" @onclick="ShowLog">
            @Log.RowNumber
        </button>
    </td>
    <td>@Log.CreationDate</td>
    <td>@Log.ExceptionCount</td>
    <td>@Log.Category</td>
    <td>
        <FilterLink MachineName="@Log.MachineName" MachineNameFilter="@Filter.MachineName">@Log.MachineName</FilterLink>
    </td>
    <td>
        <FilterLink HostName="@Log.HostName" HostNameFilter="@Filter.HostName">@Log.HostName</FilterLink>
    </td>
    <td>
        <FilterLink ApplicationName="@Log.ApplicationName" ApplicationNameFilter="@Filter.ApplicationName">@Log.ApplicationName</FilterLink>
    </td>
    <td class="log-context">
        <FilterLink Context="@Log.Context" ContextFilter="@Filter.Context">@Log.Context</FilterLink>
    </td>
    <td class="log-message">
        @Log.Message
		@if (Log.ExtendedParameterList.Any())
        {
            <br/>
			@foreach (var parameter in Log.ExtendedParameterList)
			{
                if (parameter.Value == null)
                {
                    continue;
                }
                <span>@parameter.Key: @parameter.Value</span>
				<br/>
			}
        }
    </td>
    <td>
		@Log.EnvironmentName
    </td>
</tr>
@if (!string.IsNullOrWhiteSpace(Log.ExceptionStack))
{
    var exceptionStack = Log.ExceptionStack.Replace("\r\n", "<br/>");

    var exceptionStackMarkup = new MarkupString(exceptionStack);
    <tr class="@css">
        <td colspan="10">
            @exceptionStackMarkup
        </td>
    </tr>
}


