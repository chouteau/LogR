<tr @key="Log" class="@css">
    <td>@Log.CreationDate</td>
    <td>@Log.MachineName</td>
    <td>@Log.HostName</td>
    <td>@Log.ApplicationName</td>
    <td>@Log.Category</td>
    <td>@Log.Context</td>
    <td>
        @Log.Message
        </td>
</tr>
@if (!string.IsNullOrWhiteSpace(Log.ExceptionStack))
{
    var exceptoinStack = new MarkupString(Log.ExceptionStack.Replace("\n", "<br/>"));
    <tr class="@css">
        <td colspan="7">
            @exceptoinStack
        </td>
    </tr>
}

@code {
    [Parameter]
    public LogRPush.LogInfo Log { get; set; }

    string css
    {
        get
        {
            switch (Log.Category)
            {
                case LogRPush.Category.Trace :
                    return "table-secondary";
                case LogRPush.Category.Debug :
                    return "table-default";
                case LogRPush.Category.Error :
                    return "table-danger";
                case LogRPush.Category.Fatal :
                    return "table-dark";
                case LogRPush.Category.Info :
                    return "table-info";
                case LogRPush.Category.Notification :
                    return "table-success";
                case LogRPush.Category.Sql :
                    return "table-primary";
                case LogRPush.Category.Warn :
                    return "table-warning";
                default:
                    return string.Empty;
            }
            
        }
    }
}
